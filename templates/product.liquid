{% assign add_to_cart = 'Add to cart' %}
{% assign sold_out = 'Sold Out' %}
{% assign unavailable = 'Unavailable' %}

{{ 'page--product.css' | asset_url | stylesheet_tag }}

<style>
  .product-page form {
    grid-template-columns: 50% 50%;
  }
  .product-page form .variants ul {
    flex-wrap: wrap;
  }
  .product-page form li {
    width: auto;
  }
  .product-page form .variants label {
    aspect-ratio: auto;
    padding: 10px;
  }
  .product-page form .variants label span {
    white-space: nowrap;
    font-size: 14px;
  }

  .thumbnail-rack {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    flex-wrap: wrap;
    gap: 10px;
    padding-top: 10px;
  }

  .thumbnail-rack img {
    width: 100%;
    max-width: 150px;
  }
  
</style>

<div class="product-page" itemscope itemtype="http://schema.org/Product">
  
  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
  <meta itemprop="image" content="{{ product | img_url: 'grande' }}" />
  
  <form action="/cart/add" method="post" enctype="multipart/form-data">
    
    <div class="left">
      {% render 'product-images', product: product %}
    </div>

    <div class="right">

      <div class="top">
        <h1>{{ product.title }}</h1>
      
        {% render 'product-price', product: product %}

        <div class="product-description" itemprop="description">
          {{ product.description }}
        </div>
      </div>
      
      <div class="bottom">
        {% render 'product-variants', product: product %}
    
        <div id="product-add">
          <input type="submit" name="add" id="add" value="{{ add_to_cart | escape }}">
        </div>
  
        {% if product.metafields.info.garment or product.metafields.info.shipping %}
          <div class="info-tabs">
            <div>{{ 'Info' | escape }}</div>
            {% if product.metafields.info.garment %}
              <div><span class="tab" data-type="garment">{{ 'Garment' | escape }}</span></div>
            {% endif %}
            {% if product.metafields.info.shipping %}
              <div><span class="tab" data-type="shipping">{{ 'Shipping' | escape }}</span></div>
            {% endif %}
          </div>
        {% endif %}
        
        <div class="garment tab-expanded">
          {{ product.metafields.info.garment | metafield_tag }}
        </div>

        <div class="shipping tab-expanded">
          {{ product.metafields.info.shipping | metafield_tag }}
        </div>

      </div>

    </div>

  </form>

</div>

<div class="image-overlay">
  <div class="close-overlay">{% render 'icon--close' %}</div>
  <div class="overlay-image-holder"></div>
</div>

{% comment %}
  Adding support for product options. See here for details:  
  http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options
{% endcomment %}

<script>
  
var selectCallback = function(variant, selector) {

  if (variant) {
    
    // Swap image.
    if (variant.featured_image) {
      var newImage = variant.featured_image; // New image object.
      var mainImageDomEl = jQuery('.product-photo-container img')[0]; // DOM element of main image we need to swap.
      Shopify.Image.switchImage(newImage, mainImageDomEl, switchImage); // Define switchImage (the callback) in your theme's JavaScript file.
    }
    
    // Selected a valid variant that is available.
    if (variant.available) {
          
      // Enabling add to cart button.
      jQuery('#add').removeClass('disabled').prop('disabled', false).val({{ add_to_cart | json }});
    
      // If item is backordered yet can still be ordered, we'll show special message.
      if (variant.inventory_management && variant.inventory_quantity <= 0) {
        jQuery('#selected-variant').html({{ product.title | json }}{% unless hide_default_title %} + ' - ' + variant.title{% endunless %});
        jQuery('#backorder').removeClass("hidden");
      } else {
        jQuery('#backorder').addClass("hidden");
      }
      
    } else {
      // Variant is sold out.
      jQuery('#backorder').addClass('hidden');
      jQuery('#add').val({{ sold_out | json }}).addClass('disabled').prop('disabled', true);       
    }
    
    // Whether the variant is in stock or not, we can update the price and compare at price.
    if ( variant.compare_at_price > variant.price ) {
      jQuery('#product-price').html('<span class="product-price on-sale">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") +'</span>'+'&nbsp;<s class="product-compare-price">'+Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}")+ '</s>');
    } else {
      jQuery('#product-price').html('<span class="product-price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") + '</span>' );
    }        

  } else {
    // variant doesn't exist.
    jQuery('#product-price').empty();
    jQuery('#backorder').addClass('hidden');
    jQuery('#add').val({{ unavailable | json }}).addClass('disabled').prop('disabled', true);
  }

};
  
jQuery(function($) {

  new Shopify.OptionSelectors('product-select', { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: true });
  
  // Add label if only one product option and it isn't 'Title'.
  {% if product.options.size == 1 and product.options.first != 'Title' %}
    $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
  {% endif %}

});

Shopify.Image.preload({{ product.images | json }}, 'grande');
Shopify.Image.preload({{ product.images | json }}, '1024x1024');

</script>

<script>
  jQuery('.tab').on('click', function() {
    var clicked = jQuery('.tab').attr('data-type');

    if ( jQuery('.tab-expanded').css('display', 'block') ) {

      jQuery('.tab-expanded').css('display', 'none');
      jQuery('.' + clicked).fadeIn();

      setTimeout(function() {
        jQuery('.tab-expanded').fadeOut();
      }, 3000);

    }
    
  });
</script>

<script>
  jQuery('.expand-image').on('click', function() {
    var chosen = jQuery(this).attr('data-image');
    var chosenAlt = jQuery(this).attr('data-alt');

    jQuery('.image-overlay').css({
      display: 'flex'
    });
    jQuery('.overlay-image-holder').html('<img src="'+ chosen +'" alt="'+ chosenAlt +'" />');

    jQuery('.close-overlay').on('click', function() {
      jQuery('.image-overlay').css('display', 'none');
    });
  });
</script>